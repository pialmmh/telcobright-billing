using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using LibraryExtensions;
namespace MediationModel
{
	public static class StaticExtInsertColumnHeaders
	{
		public static string acc_action { get { return " insert into acc_action(id,idAccount,threshhold_value,idAccountAction,isNotified) values ";} }
		public static string acc_chargeable { get { return " insert into acc_chargeable(id,uniqueBillId,idEvent,transactionTime,assignedDirection,description,glAccountId,servicegroup,servicefamily,ProductId,idBilledUom,idQuantityUom,BilledAmount,Quantity,unitPriceOrCharge,Prefix,RateId,TaxAmount1,TaxAmount2,TaxAmount3,VatAmount1,VatAmount2,VatAmount3,OtherAmount1,OtherAmount2,OtherAmount3,OtherDecAmount1,OtherDecAmount2,OtherDecAmount3,createdByJob,changedByJob,idBillingrule,jsonDetail) values ";} }
		public static string acc_ledger_summary { get { return " insert into acc_ledger_summary(id,idAccount,transactionDate,AMOUNT) values ";} }
		public static string acc_ledger_summary_billed { get { return " insert into acc_ledger_summary_billed(id,idAccount,transactionDate,billedAmount,eventType,invoiceOrEventId) values ";} }
		public static string acc_temp_transaction { get { return " insert into acc_temp_transaction(id,transactionTime,seqId,debitOrCredit,idEvent,uniqueBillId,description,glAccountId,uomId,amount,BalanceBefore,BalanceAfter,isBillable,isPrepaid,isBilled,cancelled,createdByJob,changedByJob,jsonDetail) values ";} }
		public static string acc_transaction { get { return " insert into acc_transaction(id,transactionTime,seqId,debitOrCredit,idEvent,uniqueBillId,description,glAccountId,uomId,amount,BalanceBefore,BalanceAfter,isBillable,isPrepaid,isBilled,cancelled,createdByJob,changedByJob,jsonDetail) values ";} }
		public static string account { get { return " insert into account(id,idParent,idParentExternal,idPartner,accountName,serviceGroup,serviceFamily,product,billableType,uom,Depth,Lineage,remark,isBillable,isCustomerAccount,isSupplierAccount,balanceBefore,lastAmount,balanceAfter,lastUpdated,superviseNegativeBalance,negativeBalanceLimit) values ";} }
		public static string allerror { get { return " insert into allerror(id,idError,jobid,jobname,TimeRaised,TimeCleared,Status,ClearType,ClearingUser,ExceptionMessage,ProcessName,ExceptionDetail) values ";} }
		public static string ansprefixextra { get { return " insert into ansprefixextra(id,PrefixBeforeAnsNumber) values ";} }
		public static string aspnetuserclaims { get { return " insert into aspnetuserclaims(Id,UserId,ClaimType,ClaimValue) values ";} }
		public static string autoinc_manual_int { get { return " insert into autoinc_manual_int(Id,incrementRequestedOn,randomNumber) values ";} }
		public static string autoinc_manual_long { get { return " insert into autoinc_manual_long(Id,incrementRequestedOn,randomValue) values ";} }
		public static string autoincrementcounter { get { return " insert into autoincrementcounter(tableName,value) values ";} }
		public static string billingruleassignment { get { return " insert into billingruleassignment(idRatePlanAssignmentTuple,idBillingRule,idServiceGroup) values ";} }
		public static string bridgedroute { get { return " insert into bridgedroute(id,switchId,routeName,inPartner,outPartner,nationalOrInternational) values ";} }
		public static string causecode { get { return " insert into causecode(id,idSwitch,CC,Description,CallCompleteIndicator) values ";} }
		public static string cdr { get { return " insert into cdr(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrdiscarded { get { return " insert into cdrdiscarded(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrerror { get { return " insert into cdrerror(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrfieldlist { get { return " insert into cdrfieldlist(fieldnumber,FieldName,IsNumeric,IsDateTime) values ";} }
		public static string cdrfieldmappingbyswitchtype { get { return " insert into cdrfieldmappingbyswitchtype(Id,FieldNumber,idCdrFormat,FieldPositionInCDRRow,BinByteOffset,BinByteLen,BinByteType) values ";} }
		public static string cdrinconsistent { get { return " insert into cdrinconsistent(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrmeta { get { return " insert into cdrmeta(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrpartiallastaggregatedrawinstance { get { return " insert into cdrpartiallastaggregatedrawinstance(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrpartialrawinstance { get { return " insert into cdrpartialrawinstance(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string cdrpartialreference { get { return " insert into cdrpartialreference(UniqueBillId,switchid,lastIdcall,CallDate,commaSepIdcallsForAllInstances,lastFilename) values ";} }
		public static string cdrsummarymeta_day_01 { get { return " insert into cdrsummarymeta_day_01(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_day_02 { get { return " insert into cdrsummarymeta_day_02(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_day_03 { get { return " insert into cdrsummarymeta_day_03(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_day_04 { get { return " insert into cdrsummarymeta_day_04(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_day_05 { get { return " insert into cdrsummarymeta_day_05(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_day_06 { get { return " insert into cdrsummarymeta_day_06(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_01 { get { return " insert into cdrsummarymeta_hr_01(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_02 { get { return " insert into cdrsummarymeta_hr_02(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_03 { get { return " insert into cdrsummarymeta_hr_03(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_04 { get { return " insert into cdrsummarymeta_hr_04(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_05 { get { return " insert into cdrsummarymeta_hr_05(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string cdrsummarymeta_hr_06 { get { return " insert into cdrsummarymeta_hr_06(id,totalInsertedDuration,totalDeletedDuration) values ";} }
		public static string commontg { get { return " insert into commontg(id,TgName,idSwitch,description) values ";} }
		public static string country { get { return " insert into country(country_code,country_name) values ";} }
		public static string countrycode { get { return " insert into countrycode(Code,Name,refasr,refacd,refccr,refccrbycc,refpdd,refasrfas) values ";} }
		public static string enumaccountingclass { get { return " insert into enumaccountingclass(id,Name,NormalBalance) values ";} }
		public static string enumanstype { get { return " insert into enumanstype(id,Type) values ";} }
		public static string enumbillingspan { get { return " insert into enumbillingspan(ofbiz_uom_Id,Type,value) values ";} }
		public static string enumbilltype { get { return " insert into enumbilltype(id,Type) values ";} }
		public static string enumcalldirection { get { return " insert into enumcalldirection(id,Type) values ";} }
		public static string enumcallforwardingroamingtype { get { return " insert into enumcallforwardingroamingtype(id,Type) values ";} }
		public static string enumcdrformat { get { return " insert into enumcdrformat(id,Type,FieldSeparatorTxt) values ";} }
		public static string enumcreditrule { get { return " insert into enumcreditrule(id,RuleName,Description,json) values ";} }
		public static string enumcurrency { get { return " insert into enumcurrency(id,Type,Description,Symbol) values ";} }
		public static string enumdatedassignment { get { return " insert into enumdatedassignment(id,Type,Tuple,description) values ";} }
		public static string enumdateparsestring { get { return " insert into enumdateparsestring(id,value,ParseString) values ";} }
		public static string enumeration { get { return " insert into enumeration(ENUM_ID,ENUM_TYPE_ID,ENUM_CODE,SEQUENCE_ID,DESCRIPTION,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string enuminvoicetemplate { get { return " insert into enuminvoicetemplate(id,TemplateName,Description,json,OtherInfo) values ";} }
		public static string enumjobautocreatetype { get { return " insert into enumjobautocreatetype(id,Type,Description) values ";} }
		public static string enumjobdefinition { get { return " insert into enumjobdefinition(id,jobtypeid,Type,Priority,BatchCreatable,JobQueue,Disabled) values ";} }
		public static string enumjobstatus { get { return " insert into enumjobstatus(id,Type) values ";} }
		public static string enumjobtype { get { return " insert into enumjobtype(id,Type) values ";} }
		public static string enumnationalorinternationalroute { get { return " insert into enumnationalorinternationalroute(id,Type) values ";} }
		public static string enumpartnerrule { get { return " insert into enumpartnerrule(id,Type) values ";} }
		public static string enumpartnertype { get { return " insert into enumpartnertype(id,Type) values ";} }
		public static string enumpostpaidinvoicestatus { get { return " insert into enumpostpaidinvoicestatus(id,Type) values ";} }
		public static string enumprepaidinvoicestatus { get { return " insert into enumprepaidinvoicestatus(id,Type) values ";} }
		public static string enumprepostpaid { get { return " insert into enumprepostpaid(id,Type) values ";} }
		public static string enumrateplanformat { get { return " insert into enumrateplanformat(id,Type,Description) values ";} }
		public static string enumrateplantype { get { return " insert into enumrateplantype(id,Type) values ";} }
		public static string enumratesheetformat { get { return " insert into enumratesheetformat(id,Type,IdentifierTextJson) values ";} }
		public static string enumroutestatus { get { return " insert into enumroutestatus(id,Type) values ";} }
		public static string enumservicecategory { get { return " insert into enumservicecategory(id,Type) values ";} }
		public static string enumservicefamily { get { return " insert into enumservicefamily(id,ServiceName,Description,PartnerAssignNotNeeded,ServiceCategory,AccountingId) values ";} }
		public static string enumservicegroup { get { return " insert into enumservicegroup(id,Type,AccountingId) values ";} }
		public static string enumservicesubcategory { get { return " insert into enumservicesubcategory(id,Type) values ";} }
		public static string enumsignalingprotocol { get { return " insert into enumsignalingprotocol(id,Type) values ";} }
		public static string enumss7networkindicator { get { return " insert into enumss7networkindicator(id,Type) values ";} }
		public static string enumswitchvendor { get { return " insert into enumswitchvendor(id,Type) values ";} }
		public static string enumtaxrule { get { return " insert into enumtaxrule(id,Type,description) values ";} }
		public static string enumtelcobrightforcarriertype { get { return " insert into enumtelcobrightforcarriertype(id,Type) values ";} }
		public static string enumtransactiontype { get { return " insert into enumtransactiontype(id,Type) values ";} }
		public static string enumtransportprotocol { get { return " insert into enumtransportprotocol(id,Type) values ";} }
		public static string enumvatrule { get { return " insert into enumvatrule(id,Type,description) values ";} }
		public static string errordefinition { get { return " insert into errordefinition(idError,Description,Severity,Action) values ";} }
		public static string genericparameterassignment { get { return " insert into genericparameterassignment(JsonExpAssignedTo,GenericInstanceFactoryName,description,JsonParametersToAssign) values ";} }
		public static string invoice { get { return " insert into invoice(INVOICE_ID,INVOICE_TYPE_ID,PARTY_ID_FROM,PARTY_ID,ROLE_TYPE_ID,STATUS_ID,BILLING_ACCOUNT_ID,originalCurrency,convertedFinalCurrency,originalAmount,convertedFinalAmount,currencyConversionFactor,CONTACT_MECH_ID,INVOICE_DATE,DUE_DATE,PAID_DATE,INVOICE_MESSAGE,REFERENCE_NUMBER,DESCRIPTION,CURRENCY_UOM_ID,RECURRENCE_INFO_ID,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string invoice_item { get { return " insert into invoice_item(INVOICE_ID,INVOICE_ITEM_SEQ_ID,INVOICE_ITEM_TYPE_ID,OVERRIDE_GL_ACCOUNT_ID,OVERRIDE_ORG_PARTY_ID,INVENTORY_ITEM_ID,PRODUCT_ID,PRODUCT_FEATURE_ID,PARENT_INVOICE_ID,PARENT_INVOICE_ITEM_SEQ_ID,UOM_ID,TAXABLE_FLAG,QUANTITY,AMOUNT,DESCRIPTION,TAX_AUTH_PARTY_ID,TAX_AUTH_GEO_ID,TAX_AUTHORITY_RATE_SEQ_ID,SALES_OPPORTUNITY_ID,JSON_DETAIL,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string job { get { return " insert into job(id,idjobdefinition,JobName,OwnerServer,idNE,priority,SerialNumber,Status,Progress,CreationTime,LastExecuted,CompletionTime,NoOfSteps,JobSummary,Error,JobParameter,JobState,JobAdditionalInfo) values ";} }
		public static string jobcompletion { get { return " insert into jobcompletion(idJob) values ";} }
		public static string jobsegment { get { return " insert into jobsegment(id,idJob,segmentNumber,stepsCount,status,SegmentDetail) values ";} }
		public static string jsonbillingrule { get { return " insert into jsonbillingrule(id,ruleName,description,JsonExpression,isPrepaid) values ";} }
		public static string lcr { get { return " insert into lcr(id,Prefix,idrateplan,startdate,LcrCurrent,LcrHistory,LastUpdated) values ";} }
		public static string lcrpoint { get { return " insert into lcrpoint(id,TriggerTime,RateChangeType,prefix,JobCreated,RatePlanAssignmentFlag) values ";} }
		public static string lcrrateplan { get { return " insert into lcrrateplan(id,idRatePlan,Description,StartDate,JobCreated) values ";} }
		public static string ledger_summary_meta { get { return " insert into ledger_summary_meta(id,totalInsertedAmount,totalDeletedAmount) values ";} }
		public static string login_history { get { return " insert into login_history(id,username,remote_ip,login_time) values ";} }
		public static string mockcdr { get { return " insert into mockcdr(SwitchId,IdCall,SequenceNumber,FileName,ServiceGroup,IncomingRoute,OriginatingIP,OPC,OriginatingCIC,OriginatingCalledNumber,TerminatingCalledNumber,OriginatingCallingNumber,TerminatingCallingNumber,PrePaid,DurationSec,EndTime,ConnectTime,AnswerTime,ChargingStatus,PDD,CountryCode,AreaCodeOrLata,ReleaseDirection,ReleaseCauseSystem,ReleaseCauseEgress,OutgoingRoute,TerminatingIP,DPC,TerminatingCIC,StartTime,InPartnerId,CustomerRate,OutPartnerId,SupplierRate,MatchedPrefixY,UsdRateY,MatchedPrefixCustomer,MatchedPrefixSupplier,InPartnerCost,OutPartnerCost,CostAnsIn,CostIcxIn,Tax1,IgwRevenueIn,RevenueAnsOut,RevenueIgwOut,RevenueIcxOut,Tax2,XAmount,YAmount,AnsPrefixOrig,AnsIdOrig,AnsPrefixTerm,AnsIdTerm,ValidFlag,PartialFlag,ReleaseCauseIngress,InRoamingOpId,OutRoamingOpId,CalledPartyNOA,CallingPartyNOA,AdditionalSystemCodes,AdditionalPartyNumber,ResellerIds,ZAmount,PreviousRoutes,E1Id,MediaIp1,MediaIp2,MediaIp3,MediaIp4,CallReleaseDuration,E1IdOut,InTrunkAdditionalInfo,OutTrunkAdditionalInfo,InMgwId,OutMgwId,MediationComplete,Codec,ConnectedNumberType,RedirectingNumber,CallForwardOrRoamingType,OtherDate,SummaryMetaTotal,TransactionMetaTotal,ChargeableMetaTotal,ErrorCode,NERSuccess,RoundedDuration,PartialDuration,PartialAnswerTime,PartialEndTime,FinalRecord,Duration1,Duration2,Duration3,Duration4,PreviousPeriodCdr,UniqueBillId,AdditionalMetaData,Category,SubCategory,ChangedByJobId,SignalingStartTime) values ";} }
		public static string ne { get { return " insert into ne(idSwitch,idCustomer,idcdrformat,idMediationRule,SwitchName,CDRPrefix,FileExtension,Description,SourceFileLocations,BackupFileLocations,LoadingStopFlag,LoadingSpanCount,TransactionSizeForCDRLoading,DecodingSpanCount,SkipAutoCreateJob,SkipCdrListed,SkipCdrReceived,SkipCdrDecoded,SkipCdrBackedup,KeepDecodedCDR,KeepReceivedCdrServer,CcrCauseCodeField,SwitchTimeZoneId,CallConnectIndicator,FieldNoForTimeSummary,EnableSummaryGeneration,ExistingSummaryCacheSpanHr,BatchToDecodeRatio,PrependLocationNumberToFileName) values ";} }
		public static string partner { get { return " insert into partner(idPartner,PartnerName,AlternateNameInvoice,AlternateNameOther,Address1,Address2,City,State,PostalCode,Country,Telephone,email,CustomerPrePaid,PartnerType,billingdate,AllowedDaysForInvoicePayment,timezone,date1,field1,field2,field3,field4,field5,refasr,refacd,refccr,refccrbycc,refpdd,refasrfas,DefaultCurrency,invoiceAddress,vatRegistrationNo) values ";} }
		public static string partnerprefix { get { return " insert into partnerprefix(id,idPartner,PrefixType,Prefix,CommonTG) values ";} }
		public static string process { get { return " insert into process(id,ProcessName,LastRun,ProcessParamaterJson,AdminState) values ";} }
		public static string product { get { return " insert into product(id,Prefix,Name,description,Category,SubCategory,ServiceFamily,AccountingId) values ";} }
		public static string rate { get { return " insert into rate(id,ProductId,Prefix,description,rateamount,WeekDayStart,WeekDayEnd,starttime,endtime,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,idrateplan,CountryCode,date1,field1,field2,field3,field4,field5,startdate,enddate,Inactive,RouteDisabled,Type,Currency,OtherAmount1,OtherAmount2,OtherAmount3,OtherAmount4,OtherAmount5,OtherAmount6,OtherAmount7,OtherAmount8,OtherAmount9,OtherAmount10,TimeZoneOffsetSec,RatePosition,IgwPercentageIn,ConflictingRateIds,ChangedByTaskId,ChangedOn,Status,idPreviousRate,EndPreviousRate,Category,SubCategory,ChangeCommitted,ConflictingRates,OverlappingRates,Comment1,Comment2,billingspan,RateAmountRoundupDecimal) values ";} }
		public static string rateassign { get { return " insert into rateassign(id,Prefix,description,rateamount,WeekDayStart,WeekDayEnd,starttime,endtime,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,idrateplan,CountryCode,date1,field1,field2,field3,field4,field5,startdate,enddate,Inactive,RouteDisabled,Type,Currency,OtherAmount1,OtherAmount2,OtherAmount3,OtherAmount4,OtherAmount5,OtherAmount6,OtherAmount7,OtherAmount8,OtherAmount9,OtherAmount10,TimeZoneOffsetSec,RatePosition,IgwPercentageIn,ConflictingRateIds,ChangedByTaskId,ChangedOn,Status,idPreviousRate,EndPreviousRate,Category,SubCategory,ChangeCommitted,ConflictingRates,OverlappingRates,Comment1,Comment2,BillingParams) values ";} }
		public static string rateplan { get { return " insert into rateplan(id,Type,RatePlanName,Description,date1,field1,field2,field3,field4,field5,TimeZone,idCarrier,Currency,codedeletedate,ChangeCommitted,Resolution,mindurationsec,SurchargeTime,SurchargeAmount,Category,SubCategory,BillingSpan,RateAmountRoundupDecimal) values ";} }
		public static string rateplanassign { get { return " insert into rateplanassign(id,Type,Description,date1,field1,field2,field3,field4,field5,TimeZone,idCarrier,Currency,codedeletedate,ChangeCommitted,RatePlanName,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,Category,SubCategory) values ";} }
		public static string rateplanassignmenttuple { get { return " insert into rateplanassignmenttuple(id,idService,AssignDirection,idpartner,route,priority) values ";} }
		public static string ratetask { get { return " insert into ratetask(id,Prefix,description,rateamount,WeekDayStart,WeekDayEnd,starttime,endtime,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,idrateplan,CountryCode,date1,field1,field2,field3,field4,field5,startdate,enddate,Inactive,RouteDisabled,Type,Currency,OtherAmount1,OtherAmount2,OtherAmount3,OtherAmount4,OtherAmount5,OtherAmount6,OtherAmount7,OtherAmount8,OtherAmount9,OtherAmount10,TimeZoneOffsetSec,RatePosition,IgwPercentageIn,ConflictingRateIds,ChangedByTaskId,ChangedOn,Status,idPreviousRate,EndPreviousRate,Category,SubCategory,changecommitted,OverlappingRates,ConflictingRates,AffectedRates,PartitionDate,Comment1,Comment2,ExecutionOrder,RateAmountRoundupDecimal,ProductId) values ";} }
		public static string ratetaskassign { get { return " insert into ratetaskassign(id,Prefix,description,rateamount,WeekDayStart,WeekDayEnd,starttime,endtime,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,idrateplan,CountryCode,date1,field1,field2,field3,field4,field5,startdate,enddate,Inactive,RouteDisabled,Type,Currency,OtherAmount1,OtherAmount2,OtherAmount3,OtherAmount4,OtherAmount5,OtherAmount6,OtherAmount7,OtherAmount8,OtherAmount9,OtherAmount10,TimeZoneOffsetSec,RatePosition,IgwPercentageIn,ConflictingRateIds,ChangedByTaskId,ChangedOn,Status,idPreviousRate,EndPreviousRate,Category,SubCategory,changecommitted,OverlappingRates,ConflictingRates,AffectedRates,PartitionDate,Comment1,Comment2) values ";} }
		public static string ratetaskassignreference { get { return " insert into ratetaskassignreference(id,idRatePlan,Description) values ";} }
		public static string ratetaskreference { get { return " insert into ratetaskreference(id,idRatePlan,Description) values ";} }
		public static string reporttemplate { get { return " insert into reporttemplate(Templatename,PageUrl,ControlValues) values ";} }
		public static string roles { get { return " insert into roles(Id,Name) values ";} }
		public static string route { get { return " insert into route(idroute,RouteName,SwitchId,CommonRoute,idPartner,NationalOrInternational,Description,Status,date1,field1,field2,field3,field4,field5) values ";} }
		public static string routeaddressmapping { get { return " insert into routeaddressmapping(idRouteAddressMapping,IpTdmAddress,NoOfChannels,AddressType,SignalingProtocol,SS7NetworkIndicator,TransportProtocol,SignalingPort,Comment,idRoute,SwitchVendor,date1,field1,field2,field3,field4,field5) values ";} }
		public static string sum_voice_day_01 { get { return " insert into sum_voice_day_01(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_day_02 { get { return " insert into sum_voice_day_02(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_day_03 { get { return " insert into sum_voice_day_03(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_day_04 { get { return " insert into sum_voice_day_04(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_day_05 { get { return " insert into sum_voice_day_05(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_day_06 { get { return " insert into sum_voice_day_06(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_01 { get { return " insert into sum_voice_hr_01(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_02 { get { return " insert into sum_voice_hr_02(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_03 { get { return " insert into sum_voice_hr_03(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_04 { get { return " insert into sum_voice_hr_04(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_05 { get { return " insert into sum_voice_hr_05(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string sum_voice_hr_06 { get { return " insert into sum_voice_hr_06(id,tup_switchid,tup_inpartnerid,tup_outpartnerid,tup_incomingroute,tup_outgoingroute,tup_customerrate,tup_supplierrate,tup_incomingip,tup_outgoingip,tup_countryorareacode,tup_matchedprefixcustomer,tup_matchedprefixsupplier,tup_sourceId,tup_destinationId,tup_customercurrency,tup_suppliercurrency,tup_tax1currency,tup_tax2currency,tup_vatcurrency,tup_starttime,totalcalls,connectedcalls,connectedcallsCC,successfulcalls,actualduration,roundedduration,duration1,duration2,duration3,PDD,customercost,suppliercost,tax1,tax2,vat,intAmount1,intAmount2,longAmount1,longAmount2,longDecimalAmount1,longDecimalAmount2,intAmount3,longAmount3,longDecimalAmount3,decimalAmount1,decimalAmount2,decimalAmount3) values ";} }
		public static string telcobrightpartner { get { return " insert into telcobrightpartner(idCustomer,CustomerName,idOperatorType,databasename,databasetype,user,pass,ServerNameOrIP,IBServerNameOrIP,IBdatabasename,IBdatabasetype,IBuser,IBpass,TransactionSizeForCDRLoading,NativeTimeZone,IgwPrefix,RateDictionaryMaxRecords,MinMSForIntlOut,RawCdrKeepDurationDays,SummaryKeepDurationDays,AutoDeleteOldData,AutoDeleteStartHour,AutoDeleteEndHour) values ";} }
		public static string temp_rate { get { return " insert into temp_rate(id,ProductId,Prefix,description,rateamount,WeekDayStart,WeekDayEnd,starttime,endtime,Resolution,MinDurationSec,SurchargeTime,SurchargeAmount,idrateplan,CountryCode,date1,field1,field2,field3,field4,field5,startdate,enddate,Inactive,RouteDisabled,Type,Currency,OtherAmount1,OtherAmount2,OtherAmount3,OtherAmount4,OtherAmount5,OtherAmount6,OtherAmount7,OtherAmount8,OtherAmount9,OtherAmount10,TimeZoneOffsetSec,RatePosition,IgwPercentageIn,ConflictingRateIds,ChangedByTaskId,ChangedOn,Status,idPreviousRate,EndPreviousRate,Category,SubCategory,ChangeCommitted,ConflictingRates,OverlappingRates,Comment1,Comment2,billingspan,RateAmountRoundupDecimal) values ";} }
		public static string timezone { get { return " insert into timezone(zone_id,abbreviation,time_start,gmt_offset,dst,offsetdesc,id) values ";} }
		public static string transactionmeta { get { return " insert into transactionmeta(id,totalInsertedAmount,totalDeletedAmount) values ";} }
		public static string uom { get { return " insert into uom(UOM_ID,UOM_TYPE_ID,ABBREVIATION,DESCRIPTION,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string uom_conversion { get { return " insert into uom_conversion(UOM_ID,UOM_ID_TO,CONVERSION_FACTOR,CUSTOM_METHOD_ID,DECIMAL_SCALE,ROUNDING_MODE,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string uom_conversion_dated { get { return " insert into uom_conversion_dated(id,UOM_ID,UOM_ID_TO,FROM_DATE,THRU_DATE,CONVERSION_FACTOR,CUSTOM_METHOD_ID,DECIMAL_SCALE,ROUNDING_MODE,PURPOSE_ENUM_ID,LAST_UPDATED_STAMP,LAST_UPDATED_TX_STAMP,CREATED_STAMP,CREATED_TX_STAMP) values ";} }
		public static string userclaims { get { return " insert into userclaims(Id,UserId,ClaimType,ClaimValue) values ";} }
		public static string userlogins { get { return " insert into userlogins(LoginProvider,ProviderKey,UserId) values ";} }
		public static string userroles { get { return " insert into userroles(id,UserId,RoleId) values ";} }
		public static string users { get { return " insert into users(Id,Email,EmailConfirmed,PasswordHash,SecurityStamp,PhoneNumber,PhoneNumberConfirmed,TwoFactorEnabled,LockoutEndDateUtc,LockoutEnabled,AccessFailedCount,UserName) values ";} }
		public static string xyzprefix { get { return " insert into xyzprefix(Prefix,Description,CountryCode,date1,field1,field2,field3,field4,field5,refasr,refacd,refccr,refccrbycc,refpdd,refasrfas) values ";} }
		public static string xyzprefixset { get { return " insert into xyzprefixset(id,Name,Description) values ";} }
		public static string xyzselected { get { return " insert into xyzselected(id,prefix,PrefixSet) values ";} }
		public static string zone { get { return " insert into zone(zone_id,country_code,zone_name) values ";} }
	}
}
